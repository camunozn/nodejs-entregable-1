CREATE SCHEMA "courses";

CREATE SCHEMA "users";

CREATE TYPE "courses"."levels" AS ENUM (
  'beginner',
  'intermediate',
  'advance'
);

CREATE TYPE "users"."roles" AS ENUM (
  'student',
  'teacher',
  'admin'
);

CREATE TABLE "courses" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY UNIQUE PRIMARY KEY,
  "title" varchar(80) UNIQUE NOT NULL,
  "description" text NOT NULL,
  "level" courses.levels NOT NULL
);

CREATE TABLE "course_videos" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY UNIQUE PRIMARY KEY,
  "title" varchar(80) NOT NULL,
  "url" text UNIQUE NOT NULL,
  "course_id" int
);

CREATE TABLE "categories" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY UNIQUE PRIMARY KEY,
  "category" varchar(80) UNIQUE NOT NULL
);

CREATE TABLE "course_categories" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY UNIQUE PRIMARY KEY,
  "course_id" int NOT NULL,
  "category_id" int NOT NULL
);

CREATE TABLE "users" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY UNIQUE PRIMARY KEY,
  "name" varchar(60) NOT NULL,
  "email" varchar(50) UNIQUE NOT NULL,
  "password" varchar(20) NOT NULL,
  "age" int
);

CREATE TABLE "course_students" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY UNIQUE PRIMARY KEY,
  "course_id" int NOT NULL,
  "student_id" int NOT NULL
);

CREATE TABLE "course_teachers" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY UNIQUE PRIMARY KEY,
  "course_id" int NOT NULL,
  "teacher_id" int NOT NULL
);

CREATE TABLE "user_roles" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY UNIQUE PRIMARY KEY,
  "user_id" int NOT NULL,
  "role_id" int NOT NULL
);

CREATE TABLE "roles" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY UNIQUE PRIMARY KEY,
  "role" users.roles UNIQUE NOT NULL
);

ALTER TABLE "course_videos" ADD FOREIGN KEY ("course_id") REFERENCES "courses" ("id");

ALTER TABLE "course_categories" ADD FOREIGN KEY ("course_id") REFERENCES "courses" ("id");

ALTER TABLE "course_categories" ADD FOREIGN KEY ("category_id") REFERENCES "categories" ("id");

ALTER TABLE "course_students" ADD FOREIGN KEY ("course_id") REFERENCES "courses" ("id");

ALTER TABLE "course_students" ADD FOREIGN KEY ("student_id") REFERENCES "users" ("id");

ALTER TABLE "course_teachers" ADD FOREIGN KEY ("course_id") REFERENCES "courses" ("id");

ALTER TABLE "course_teachers" ADD FOREIGN KEY ("teacher_id") REFERENCES "users" ("id");

ALTER TABLE "user_roles" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "user_roles" ADD FOREIGN KEY ("role_id") REFERENCES "roles" ("id");

INSERT INTO roles ("role") VALUES ('student'), ('teacher'), ('admin');

INSERT INTO categories ("category") VALUES ('software development'), ('project management');

INSERT INTO courses ("title", "description", "level") VALUES ('CS50', 'Computer science course from Harvard', 'beginner'), ('Python', 'Python course for back-end development', 'intermediate');

INSERT INTO users ("name", "email", "password", "age") VALUES ('César Muñoz', 'camunozn89@gmail.com', 'pass1234', 33), ('Juan Pérez', 'juan@example.com', 'pass1234', 40);

INSERT INTO user_roles ("user_id", "role_id") VALUES (1, 1), (2, 2);

INSERT INTO course_videos ("title", "url", "course_id") VALUES ('CS50 Clase 1: Hello World', 'https://cs50.example.com/clases/1',1), ('Python Clase 1: Hello World', 'https://python.example.com/clases/1', 2);

INSERT INTO course_categories ("course_id", "category_id") VALUES (1,1), (2,1);

INSERT INTO course_students ("course_id", "student_id") VALUES (1,1), (2,1);

INSERT INTO course_teachers ("course_id", "teacher_id") VALUES (1,2), (2,2);
